dc cheatsheet:

   dc evaluates expressions in the form of a postfix expression. Entering a 
   number pushes it into the stack and entering an operator evaluates an 
   expression and pushes the result back into the stack. It can evalute 
   +, -, /, *, %, ^. Commands can be used to manipulate stack.

   Syntax: dc [OPTION] [file ...]

   Commands :

   p Prints the value on the top of the stack and ends the statement with
     a newline.
   n Prints the value on the top of the stack and ends the line with a
     null statement.
   f Prints the entire stack, without any alteration.
   P Pops the value from the top of the stack.
   c Clear the stack.
   d Duplicates the top value and push it into the main stack.
   r Reverses the order of top two elements in the stack.
   Z Pops the value from the stack, calculate the number of digits in it
     and pushes that number.
   X Pops the value from the stack, calculate the number of fraction
     digits in it and pushes that number.
   v Pops one value, calculates its square root and pushes that number. 
   z Pushes the stack length into the stack.
   i Pops the value from the stack and uses it as input radix.
   o Pops the value from the stack and uses it as output radix.
   k Pops the values from the stack and uses it to set precision.
   I Pushes the value of input radix into the stack. 
   O Pushes the value of output radix into the stack
   K Pushes the precission value into the stack.

   Options:

   -e Evaluate a particular expression.
   -f Evalute the contents of a file.
   -h Displays help information.
   -V Display version information.
